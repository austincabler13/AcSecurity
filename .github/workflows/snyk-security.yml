# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security Analysis

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read                  # Required for actions/checkout to fetch code
      security-events: write          # Required for github/codeql-action/upload-sarif to upload SARIF results
      actions: read                   # Required only for private repositories

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Code Test (SAST) and save results in SARIF format
        run: |
          snyk code test --sarif-file-output=snyk-code.sarif --exit-code=0 || true
          if [ ! -f snyk-code.sarif ]; then
            echo "snyk-code.sarif not found, skipping SARIF upload step."
            exit 0
          fi

      - name: Snyk Open Source Monitor (SCA)
        run: snyk monitor || true

      - name: Snyk Infrastructure as Code Test (IaC)
        run: snyk iac test --report -d || true

      - name: Upload SARIF file to GitHub Code Scanning
        if: ${{ success() && steps.check_sarif.outputs.sarif_exists == 'true' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif

      - name: Check if SARIF file exists
        id: check_sarif
        run: |
          if [ -f snyk-code.sarif ]; then
            echo "sarif_exists=true" >> $GITHUB_ENV
          else
            echo "sarif_exists=false" >> $GITHUB_ENV
